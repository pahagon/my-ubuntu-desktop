# Begin ~/.bashrc
# Personal aliases and functions.

if [ -f "/etc/bashrc" ] ; then
  source /etc/bashrc
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

source $HOME/dot/bash/complete/project
source $HOME/dot/bash/complete/elixir

# Funciontions
cmd () {
  curl "http://www.commandlinefu.com/commands/matching/$(echo "$@" \| sed 's/ /-/g')/$(echo -n $@ | base64)/plaintext" ;
}

calc () {
  if which python2 &>/dev/null; then
    python2 -ic "from __future__ import division; from math import *; from random import *"
  elif which python3 &>/dev/null; then
    python3 -ic "from math import *; import cmath"
  elif which bc &>/dev/null; then
    bc -q -l
  else
    echo "requires python2, python3 or bc for calculator features"
  fi
}

myip () {
  echo "--------------- network information ---------------"
  echo "router ip:" $(netstat -rn | awk 'fnr == 3 {print $2}')
  # newer system like archlinux
  ip addr | awk '/global/ {print $1,$2}' | cut -d\/ -f1
  ip addr | awk '/global/ {print $3,$4}'
  ip addr | awk '/ether/ {print $1,$2}'
  ip addr | awk '/scope link/ {print $1,$2}' | cut -d\/ -f1
  # older system like debian
  ifconfig | awk '/inet addr/ {print $1,$2}' | awk -f: '{print $1,$2}'
  ifconfig | awk '/bcast/ {print $3}' | awk -f: '{print $1,$2}'
  ifconfig | awk '/inet addr/ {print $4}' | awk -f: '{print $1,$2}'
  ifconfig | awk '/hwaddr/ {print $4,$5}'
  ifconfig | awk '/scope:link/ {print $1,$3}' | cut -d\/ -f1
  # echo external ip $(curl -s http://checkip.dyndns.org/ | grep -o "[[:digit:].]\+")
  # echo external ip: $(curl -s http://ipaddr.io/)
  # echo external ip: $(curl -s https://icanhazip.com/)
  # echo external ip: $(curl -s https://ifconfig.co/)
  # echo external ip: $(curl -s http://pasteip.me/api/cli/ && echo)
  echo external ip: $(curl -s http://ipecho.net/plain)
  echo "---------------------------------------------------"
}

ssh-add-reload () {
  # change permissions on file
  sudo chmod 600 ~/.ssh/id_rsa
  sudo chmod 600 ~/.ssh/id_rsa.pub
  # start the ssh-agent in the background
  eval $(ssh-agent -s)
  # make ssh agent to actually use copied key
  ssh-add ~/.ssh/id_rsa
}

# End ~/.bashrc
